((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst defcc) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.yacc->shen) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.yacc) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.yacc) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iMark) (iConst ()) (iAccess 0) (iConst true) (iConst shen.split_cc_rules) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.cc_body) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.yacc_cases) (iGetF) (iApply) (iFreeze (iGrab) (iConst define) (iAccess 4) (iConst Stream) (iConst ->) (iMark) (iAccess 0) (iConst shen.kill-code) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iConst shen.yacc->shen) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst kill) (iConst occurrences) (iGetF) (iApply) (iConst 0) (iPrimCall 16) (iJF (iConst trap-error) (iAccess 0) (iConst lambda) (iConst E) (iConst shen.analyse-kill) (iConst E) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.kill-code) (iDefun) (iReturn) (iHalt))

((iFreeze (iConst "yacc kill") (iPrimCall 18) (iReturn)) (iConst kill) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 17) (iFreeze (iGrab) (iAccess 0) (iConst "yacc kill") (iPrimCall 19) (iJF (iConst fail) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iReturn))) (iTailApply)) (iConst shen.analyse-kill) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst ()) (iReturn)) (iJMP (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iMark) (iConst ()) (iMark) (iAccess 0) (iConst reverse) (iGetF) (iApply) (iAccess 2) (iConst shen.split_cc_rule) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iConst ;) (iAccess 1) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iConst ()) (iMark) (iAccess 0) (iConst reverse) (iGetF) (iApply) (iAccess 2) (iConst shen.split_cc_rule) (iGetF) (iApply) (iMark) (iConst ()) (iAccess 1) (iPrimCall 33) (iAccess 2) (iConst shen.split_cc_rules) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iAccess 0) (iPrimCall 34) (iAccess 1) (iPrimCall 33) (iAccess 2) (iConst shen.split_cc_rules) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.split_cc_rules) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.split_cc_rules) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 1) (iPrimCall 35) (iJF (iConst :=) (iAccess 1) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iConst reverse) (iGetF) (iApply) (iAccess 1) (iPrimCall 33) (iPrimCall 34) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iConst :=) (iAccess 1) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst where) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iConst reverse) (iGetF) (iApply) (iConst where) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iMark) (iAccess 0) (iAccess 2) (iConst shen.semantic-completion-warning) (iGetF) (iApply) (iPop) (iAccess 0) (iConst :=) (iMark) (iMark) (iAccess 0) (iConst reverse) (iGetF) (iApply) (iConst shen.default_semantics) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 2) (iConst shen.split_cc_rule) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iAccess 0) (iPrimCall 34) (iAccess 1) (iPrimCall 33) (iAccess 2) (iConst shen.split_cc_rule) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.split_cc_rule) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.split_cc_rule) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst true) (iAccess 1) (iPrimCall 19) (iJF (iMark) (iMark) (iConst stoutput) (iGetF) (iApply) (iConst "warning: ") (iConst shen.prhush) (iGetF) (iApply) (iPop) (iMark) (iMark) (iAccess 0) (iConst reverse) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst stoutput) (iGetF) (iApply) (iMark) (iConst shen.a) (iConst " ") (iAccess 0) (iConst shen.app) (iGetF) (iApply) (iConst shen.prhush) (iGetF) (iTailApply)) (iConst for-each) (iGetF) (iApply) (iPop) (iMark) (iConst stoutput) (iGetF) (iApply) (iConst "has no semantics.
") (iConst shen.prhush) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.skip) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.semantic-completion-warning) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.grammar_symbol?) (iGetF) (iApply)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.grammar_symbol?) (iGetF) (iApply)) (iJMP (iConst false)) (iJF (iConst append) (iAccess 0) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.default_semantics) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iAccess 0) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.default_semantics) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.default_semantics) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.default_semantics) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 40) (iJF (iMark) (iMark) (iAccess 0) (iConst explode) (iGetF) (iApply) (iConst shen.strip-pathname) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iConst "<") (iPrimCall 19) (iJF (iMark) (iAccess 0) (iConst reverse) (iGetF) (iApply) (iPrimCall 32) (iConst ">") (iPrimCall 19) (iReturn)) (iJMP (iConst false) (iReturn))) (iTailApply)) (iJMP (iConst false) (iReturn))) (iConst shen.grammar_symbol?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst YaccParse) (iFreeze (iGrab) (iConst let) (iAccess 0) (iAccess 1) (iPrimCall 32) (iConst if) (iConst =) (iAccess 0) (iConst fail) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iMark) (iAccess 1) (iPrimCall 33) (iConst shen.yacc_cases) (iGetF) (iApply) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.yacc_cases) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.yacc_cases) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst Stream) (iAccess 0) (iPrimCall 32) (iConst shen.syntax) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.cc_body) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.cc_body) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 2) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 35) (iJF (iConst where) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst if) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.semantics) (iGetF) (iApply) (iConst shen.pair) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.semantics) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst fail) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst ()) (iAccess 2) (iPrimCall 19) (iJF (iConst shen.pair) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iMark) (iAccess 0) (iConst shen.semantics) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 2) (iPrimCall 35) (iJF (iMark) (iAccess 2) (iPrimCall 32) (iConst shen.grammar_symbol?) (iGetF) (iApply) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iConst shen.recursive_descent) (iGetF) (iTailApply)) (iJMP (iAccess 2) (iPrimCall 32) (iPrimCall 44) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iConst shen.variable-match) (iGetF) (iTailApply)) (iJMP (iMark) (iAccess 2) (iPrimCall 32) (iConst shen.jump_stream?) (iGetF) (iApply) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iConst shen.jump_stream) (iGetF) (iTailApply)) (iJMP (iMark) (iAccess 2) (iPrimCall 32) (iConst shen.terminal?) (iGetF) (iApply) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iConst shen.check_stream) (iGetF) (iTailApply)) (iJMP (iAccess 2) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iPrimCall 33) (iMark) (iAccess 2) (iPrimCall 32) (iConst shen.decons) (iGetF) (iApply) (iConst shen.list-stream) (iGetF) (iTailApply)) (iJMP (iMark) (iConst shen.a) (iConst " is not legal syntax
") (iAccess 2) (iPrimCall 32) (iConst shen.app) (iGetF) (iApply) (iPrimCall 18) (iReturn))))))) (iJMP (iConst true) (iJF (iConst shen.syntax) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.syntax) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iConst and) (iConst cons?) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst cons?) (iConst hd) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iMark) (iConst shen.place) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 2) (iConst shen.pair) (iConst tl) (iConst hd) (iAccess 3) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst hd) (iConst tl) (iAccess 3) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 4) (iConst shen.syntax) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iMark) (iAccess 1) (iConst shen.pair) (iConst hd) (iConst hd) (iAccess 4) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst hd) (iConst tl) (iAccess 4) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 6) (iConst shen.syntax) (iGetF) (iApply) (iAccess 1) (iAccess 0) (iConst shen.insert-runon) (iGetF) (iApply) (iFreeze (iGrab) (iConst if) (iAccess 3) (iAccess 0) (iConst fail) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iConst shen.list-stream) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.decons) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.decons) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst shen.pair) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 2) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iAccess 2) (iAccess 3) (iConst shen.insert-runon) (iGetF) (iTailApply)) (iConst map) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.insert-runon) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst ".") (iConst element?) (iGetF) (iApply) (iPrimCall 38) (iJF (iAccess 0) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iConst shen.strip-pathname) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.strip-pathname) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.strip-pathname) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 32) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iMark) (iAccess 1) (iMark) (iAccess 3) (iPrimCall 32) (iConst Parse_) (iConst concat) (iGetF) (iApply) (iAccess 3) (iPrimCall 33) (iConst shen.syntax) (iGetF) (iApply) (iFreeze (iGrab) (iConst fail) (iConst ()) (iPrimCall 34) (iFreeze (iGrab) (iConst let) (iMark) (iAccess 5) (iPrimCall 32) (iConst Parse_) (iConst concat) (iGetF) (iApply) (iAccess 2) (iConst if) (iConst not) (iConst =) (iConst fail) (iConst ()) (iPrimCall 34) (iMark) (iAccess 5) (iPrimCall 32) (iConst Parse_) (iConst concat) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 1) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.recursive_descent) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.recursive_descent) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iPrimCall 35) (iJF (iConst cons?) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iConst let) (iMark) (iAccess 3) (iPrimCall 32) (iConst Parse_) (iConst concat) (iGetF) (iApply) (iConst hd) (iConst hd) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iMark) (iAccess 1) (iConst shen.pair) (iConst tl) (iConst hd) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.hdtl) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 3) (iPrimCall 33) (iConst shen.syntax) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iConst fail) (iConst ()) (iPrimCall 34) (iFreeze (iGrab) (iConst if) (iAccess 2) (iAccess 1) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.variable-match) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.variable-match) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst false) (iReturn)) (iJMP (iAccess 0) (iPrimCall 44) (iJF (iConst false) (iReturn)) (iJMP (iConst true) (iJF (iConst true) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.terminal?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iConst _) (iPrimCall 19) (iJF (iConst true) (iReturn)) (iJMP (iConst true) (iJF (iConst false) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.jump_stream?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iPrimCall 35) (iJF (iConst and) (iConst cons?) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst =) (iAccess 2) (iPrimCall 32) (iConst hd) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iMark) (iAccess 1) (iConst shen.pair) (iConst tl) (iConst hd) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.hdtl) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 3) (iPrimCall 33) (iConst shen.syntax) (iGetF) (iApply) (iFreeze (iGrab) (iConst fail) (iConst ()) (iPrimCall 34) (iFreeze (iGrab) (iConst if) (iAccess 2) (iAccess 1) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.check_stream) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.check_stream) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iPrimCall 35) (iJF (iConst cons?) (iConst hd) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iMark) (iAccess 1) (iConst shen.pair) (iConst tl) (iConst hd) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.hdtl) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 3) (iPrimCall 33) (iConst shen.syntax) (iGetF) (iApply) (iFreeze (iGrab) (iConst fail) (iConst ()) (iPrimCall 34) (iFreeze (iGrab) (iConst if) (iAccess 2) (iAccess 1) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.jump_stream) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.jump_stream) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iMark) (iAccess 0) (iConst shen.grammar_symbol?) (iGetF) (iApply) (iJF (iConst shen.hdtl) (iMark) (iAccess 0) (iConst Parse_) (iConst concat) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 44) (iJF (iAccess 0) (iConst Parse_) (iConst concat) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.semantics) (iGetF) (iTailApply)) (iConst map) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.semantics) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iReturn)) (iJMP (iConst true) (iJF (iConst fail) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.snd-or-fail) (iDefun) (iReturn) (iHalt))

((iFreeze (iConst shen.fail!) (iReturn)) (iConst fail) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.pair) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iReturn)) (iConst shen.hdtl) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst fail) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst <!>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iConst ()) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst <e>) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst <e>) (iDefun) (iReturn) (iHalt))



