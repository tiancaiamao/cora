((iFreeze (iGrab) (iMark) (iAccess 0) (iConst *macros*) (iPrimCall 36) (iConst shen.compose) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 1) (iAccess 0) (iPrimCall 19) (iJF (iAccess 1) (iReturn)) (iJMP (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst macroexpand) (iGetF) (iTailApply)) (iConst shen.walk) (iGetF) (iTailApply))) (iTailApply)) (iConst macroexpand) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst error) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst simple-error) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.mkstr) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.error-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst output) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.prhush) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.mkstr) (iGetF) (iApply) (iConst stoutput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst pr) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst pr) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst stoutput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.output-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst make-string) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.mkstr) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.make-string-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst lineread) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst lineread) (iConst stinput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst input) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst input) (iConst stinput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst read) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst read) (iConst stinput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst input+) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst input+) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst stinput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst read-byte) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst read-byte) (iConst stinput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst read-char-code) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst read-char-code) (iConst stinput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))))) (iConst shen.input-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iAccess 0) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iAccess 1) (iPrimCall 32) (iApply) (iAccess 1) (iPrimCall 33) (iConst shen.compose) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.compose) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.compose) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst compile) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst compile) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst lambda) (iConst E) (iConst if) (iConst cons?) (iConst E) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst error) (iConst "parse error here: ~S~%") (iConst E) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst error) (iConst "parse error~%") (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.compile-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst prolog?) (iAccess 0) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iConst shen.f) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 1) (iPrimCall 33) (iConst shen.receive-terms) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iMark) (iMark) (iMark) (iMark) (iConst ;) (iConst ()) (iPrimCall 34) (iMark) (iAccess 2) (iPrimCall 33) (iConst shen.pass-literals) (iGetF) (iApply) (iConst append) (iGetF) (iApply) (iConst <--) (iConst ()) (iPrimCall 34) (iConst append) (iGetF) (iApply) (iAccess 0) (iConst append) (iGetF) (iApply) (iConst defprolog) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst append) (iGetF) (iApply) (iConst eval) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 2) (iMark) (iConst shen.start-new-prolog-process) (iConst ()) (iPrimCall 34) (iConst freeze) (iConst true) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 1) (iConst append) (iGetF) (iApply) (iPrimCall 34) (iFreeze (iGrab) (iAccess 0) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.prolog-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst receive) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.receive-terms) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iConst shen.receive-terms) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.receive-terms) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.receive-terms) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst receive) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iConst shen.pass-literals) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.pass-literals) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.pass-literals) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.pass-literals) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst defprolog) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iFreeze (iGrab) (iAccess 0) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iConst shen.prolog-error) (iGetF) (iTailApply)) (iAccess 0) (iPrimCall 33) (iFreeze (iGrab) (iAccess 0) (iConst shen.<defprolog>) (iGetF) (iTailApply)) (iConst compile) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.defprolog-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst datatype) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.process-datatype) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.intern-type) (iGetF) (iApply) (iConst compile) (iConst lambda) (iConst X) (iConst shen.<datatype-rules>) (iConst X) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iConst shen.rcons_form) (iGetF) (iApply) (iConst function) (iConst shen.datatype-error) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.datatype-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst "type#") (iAccess 0) (iPrimCall 12) (iPrimCall 30) (iPrimCall 31) (iReturn)) (iConst shen.intern-type) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst @s) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst @s) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iConst @s) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iConst shen.@s-macro) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst @s) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 27)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst explode) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iConst length) (iGetF) (iApply) (iConst 1) (iPrimCall 16) (iJF (iConst @s) (iMark) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iAccess 0) (iConst append) (iGetF) (iApply) (iPrimCall 34) (iConst shen.@s-macro) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iReturn))) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.@s-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst synonyms) (iAccess 0) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst shen.synonyms-help) (iMark) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.curry-synonyms) (iGetF) (iApply) (iConst shen.rcons_form) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.synonyms-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.curry-type) (iGetF) (iTailApply)) (iConst map) (iGetF) (iTailApply)) (iConst shen.curry-synonyms) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst nl) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst nl) (iConst 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.nl-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iMark) (iConst @p) (iConst @v) (iConst append) (iConst and) (iConst or) (iConst +) (iConst *) (iConst do) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst element?) (iGetF) (iApply)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iConst shen.assoc-macro) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.assoc-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst let) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst let) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iMark) (iConst let) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iConst shen.let-macro) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.let-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst /.) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst lambda) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iConst /.) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iConst shen.abs-macro) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst /.) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst lambda) (iAccess 0) (iPrimCall 33) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.abs-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst cases) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst true) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst cases) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst if) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst simple-error) (iConst "error: cases exhausted") (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst cases) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst if) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iMark) (iConst cases) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iConst shen.cases-macro) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst cases) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst "error: odd number of case elements
") (iPrimCall 18) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.cases-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst time) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst let) (iConst Start) (iConst get-time) (iConst run) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst Result) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst Finish) (iConst get-time) (iConst run) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst Time) (iConst -) (iConst Finish) (iConst Start) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst Message) (iConst shen.prhush) (iConst cn) (iConst "
run time: ") (iConst cn) (iConst str) (iConst Time) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst " secs
") (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst stoutput) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst Result) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.let-macro) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.timer-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst @p) (iAccess 0) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.tuple-up) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.tuple-up) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst put) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst put) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst value) (iConst *property-vector*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst get) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst get) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst value) (iConst *property-vector*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst get/or) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst get/or) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst value) (iConst *property-vector*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst unput) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst unput) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst value) (iConst *property-vector*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.put/get-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst function) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst arity) (iGetF) (iApply) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.function-abstraction) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.function-macro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst 0) (iAccess 0) (iPrimCall 19) (iJF (iMark) (iConst shen.a) (iConst " has no lambda form
") (iAccess 1) (iConst shen.app) (iGetF) (iApply) (iPrimCall 18) (iReturn)) (iJMP (iConst -1) (iAccess 0) (iPrimCall 19) (iJF (iConst function) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst ()) (iAccess 0) (iAccess 1) (iConst shen.function-abstraction-help) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.function-abstraction) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst 0) (iAccess 1) (iPrimCall 19) (iJF (iAccess 2) (iAccess 0) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iMark) (iConst V) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iConst /.) (iAccess 0) (iMark) (iMark) (iAccess 0) (iConst ()) (iPrimCall 34) (iAccess 1) (iConst append) (iGetF) (iApply) (iAccess 2) (iConst 1) (iPrimCall 20) (iAccess 3) (iConst shen.function-abstraction-help) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.function-abstraction-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst shen.*macroreg*) (iPrimCall 36) (iFreeze (iGrab) (iMark) (iAccess 0) (iAccess 1) (iConst shen.findpos) (iGetF) (iApply) (iFreeze (iGrab) (iConst shen.*macroreg*) (iMark) (iAccess 1) (iAccess 2) (iConst remove) (iGetF) (iApply) (iPrimCall 37) (iFreeze (iGrab) (iConst *macros*) (iMark) (iConst *macros*) (iPrimCall 36) (iAccess 1) (iConst shen.remove-nth) (iGetF) (iApply) (iPrimCall 37) (iFreeze (iGrab) (iAccess 4) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iConst undefmacro) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iMark) (iConst shen.a) (iConst " is not a macro
") (iAccess 1) (iConst shen.app) (iGetF) (iApply) (iPrimCall 18) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iAccess 1) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst 1) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst 1) (iMark) (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst shen.findpos) (iGetF) (iApply) (iPrimCall 23) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.findpos) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.findpos) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst 1) (iAccess 1) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst 1) (iPrimCall 20) (iConst shen.remove-nth) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.remove-nth) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.remove-nth) (iDefun) (iReturn) (iHalt))



