((iFreeze (iGrab) (iMark) (iMark) (iConst stoutput) (iGetF) (iApply) (iConst "partial function ") (iMark) (iConst shen.a) (iConst ";
") (iAccess 0) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iConst shen.prhush) (iGetF) (iApply) (iPop) (iMark) (iAccess 0) (iConst shen.tracked?) (iGetF) (iApply) (iPrimCall 38) (iJF (iMark) (iConst "track ") (iMark) (iConst shen.a) (iConst "? ") (iAccess 0) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iConst y-or-n?) (iGetF) (iApply)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iAccess 0) (iConst ps) (iGetF) (iApply) (iConst shen.track-function) (iGetF) (iApply)) (iJMP (iConst shen.ok)) (iPop) (iConst "aborted") (iPrimCall 18) (iReturn)) (iConst shen.f_error) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst shen.*tracking*) (iPrimCall 36) (iAccess 0) (iConst element?) (iGetF) (iTailApply)) (iConst shen.tracked?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst ps) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst shen.track-function) (iGetF) (iTailApply)) (iTailApply)) (iConst track) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst defun) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst defun) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.insert-tracking-code) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iAccess 0) (iPrimCall 3) (iFreeze (iGrab) (iConst shen.*tracking*) (iAccess 0) (iConst shen.*tracking*) (iPrimCall 36) (iPrimCall 34) (iPrimCall 37) (iFreeze (iGrab) (iAccess 1) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.track-function) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.track-function) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst do) (iConst set) (iConst shen.*call*) (iConst +) (iConst value) (iConst shen.*call*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst do) (iConst shen.input-track) (iConst value) (iConst shen.*call*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 2) (iMark) (iAccess 1) (iConst shen.cons_form) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst do) (iConst shen.terpri-or-read-char) (iConst ()) (iPrimCall 34) (iConst let) (iConst Result) (iAccess 0) (iConst do) (iConst shen.output-track) (iConst value) (iConst shen.*call*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 2) (iConst Result) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst do) (iConst set) (iConst shen.*call*) (iConst -) (iConst value) (iConst shen.*call*) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst do) (iConst shen.terpri-or-read-char) (iConst ()) (iPrimCall 34) (iConst Result) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.insert-tracking-code) (iDefun) (iReturn) (iHalt))

((iConst shen.*step*) (iConst false) (iPrimCall 37) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst +) (iAccess 0) (iPrimCall 19) (iJF (iConst shen.*step*) (iConst true) (iPrimCall 37) (iReturn)) (iJMP (iConst -) (iAccess 0) (iPrimCall 19) (iJF (iConst shen.*step*) (iConst false) (iPrimCall 37) (iReturn)) (iJMP (iConst true) (iJF (iConst "step expects a + or a -.
") (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst step) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst +) (iAccess 0) (iPrimCall 19) (iJF (iConst shen.*spy*) (iConst true) (iPrimCall 37) (iReturn)) (iJMP (iConst -) (iAccess 0) (iPrimCall 19) (iJF (iConst shen.*spy*) (iConst false) (iPrimCall 37) (iReturn)) (iJMP (iConst true) (iJF (iConst "spy expects a + or a -.
") (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst spy) (iDefun) (iReturn) (iHalt))

((iFreeze (iConst shen.*step*) (iPrimCall 36) (iJF (iConst *stinput*) (iPrimCall 36) (iPrimCall 6) (iConst shen.check-byte) (iGetF) (iTailApply)) (iJMP (iConst 1) (iConst nl) (iGetF) (iTailApply))) (iConst shen.terpri-or-read-char) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iMark) (iConst shen.hat) (iGetF) (iApply) (iPrimCall 19) (iJF (iConst "aborted") (iPrimCall 18) (iReturn)) (iJMP (iConst true) (iJF (iConst true) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.check-byte) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iMark) (iMark) (iConst stoutput) (iGetF) (iApply) (iConst "
") (iMark) (iConst shen.a) (iConst "<") (iMark) (iConst shen.a) (iConst "> Inputs to ") (iMark) (iConst shen.a) (iConst " 
") (iMark) (iConst shen.a) (iConst "") (iMark) (iAccess 2) (iConst shen.spaces) (iGetF) (iApply) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iAccess 1) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iAccess 2) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iMark) (iAccess 2) (iConst shen.spaces) (iGetF) (iApply) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iConst shen.prhush) (iGetF) (iApply) (iPop) (iAccess 0) (iConst shen.recursively-print) (iGetF) (iTailApply)) (iConst shen.input-track) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iMark) (iConst stoutput) (iGetF) (iApply) (iConst " ==>") (iConst shen.prhush) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst print) (iGetF) (iApply) (iPop) (iMark) (iMark) (iConst stoutput) (iGetF) (iApply) (iConst ", ") (iConst shen.prhush) (iGetF) (iApply) (iPop) (iAccess 0) (iPrimCall 33) (iConst shen.recursively-print) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.recursively-print) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.recursively-print) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst 0) (iAccess 0) (iPrimCall 19) (iJF (iConst "") (iReturn)) (iJMP (iConst true) (iJF (iConst " ") (iMark) (iAccess 0) (iConst 1) (iPrimCall 20) (iConst shen.spaces) (iGetF) (iApply) (iPrimCall 30) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.spaces) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iMark) (iConst stoutput) (iGetF) (iApply) (iConst "
") (iMark) (iConst shen.a) (iConst "<") (iMark) (iConst shen.a) (iConst "> Output from ") (iMark) (iConst shen.a) (iConst " 
") (iMark) (iConst shen.a) (iConst "==> ") (iMark) (iConst shen.s) (iConst "") (iAccess 0) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iMark) (iAccess 2) (iConst shen.spaces) (iGetF) (iApply) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iAccess 1) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iAccess 2) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iMark) (iAccess 2) (iConst shen.spaces) (iGetF) (iApply) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iConst shen.prhush) (iGetF) (iTailApply)) (iConst shen.output-track) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst shen.*tracking*) (iPrimCall 36) (iFreeze (iGrab) (iConst shen.*tracking*) (iMark) (iAccess 0) (iAccess 1) (iConst remove) (iGetF) (iApply) (iPrimCall 37) (iFreeze (iGrab) (iMark) (iAccess 2) (iConst ps) (iGetF) (iApply) (iConst eval) (iGetF) (iTailApply)) (iTailApply)) (iTailApply)) (iConst untrack) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst ps) (iGetF) (iApply) (iConst shen.profile-help) (iGetF) (iTailApply)) (iConst profile) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst defun) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iConst shen.f) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iConst defun) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 34) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iConst shen.profile-func) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iConst defun) (iAccess 1) (iAccess 2) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 2) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 2) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iConst subst) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iMark) (iAccess 1) (iConst shen.eval-without-macros) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 1) (iConst shen.eval-without-macros) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 5) (iPrimCall 33) (iPrimCall 32) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst "Cannot profile.
") (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.profile-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iConst untrack) (iGetF) (iTailApply)) (iConst unprofile) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst let) (iConst Start) (iConst get-time) (iConst run) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst let) (iConst Result) (iAccess 0) (iConst let) (iConst Finish) (iConst -) (iConst get-time) (iConst run) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst Start) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst let) (iConst Record) (iConst shen.put-profile) (iAccess 2) (iConst +) (iConst shen.get-profile) (iAccess 2) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst Finish) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst Result) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.profile-func) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.get-profile) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst 0) (iAccess 1) (iConst shen.put-profile) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 1) (iAccess 2) (iConst @p) (iGetF) (iTailApply)) (iTailApply)) (iTailApply)) (iConst profile-results) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst *property-vector*) (iPrimCall 36) (iFreeze (iConst 0) (iReturn)) (iConst profile) (iAccess 0) (iConst get/or) (iGetF) (iTailApply)) (iConst shen.get-profile) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst *property-vector*) (iPrimCall 36) (iAccess 0) (iConst profile) (iAccess 1) (iConst put) (iGetF) (iTailApply)) (iConst shen.put-profile) (iDefun) (iReturn) (iHalt))



